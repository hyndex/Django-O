# Generated by Django 5.0.3 on 2024-03-21 10:40

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ocpp_app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_corporate', models.BooleanField(default=False)),
                ('corporate_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('corporate_name', models.CharField(blank=True, max_length=255, null=True)),
                ('percent_discount_enable', models.BooleanField(default=True)),
                ('discount_percent', models.FloatField(default=0.0)),
                ('time_fixed_discount_enable', models.BooleanField(default=True)),
                ('discount_fixed_time_amount', models.FloatField(default=0.0)),
                ('kwh_fixed_discount_enable', models.BooleanField(default=True)),
                ('discount_fixed_kwh_amount', models.FloatField(default=0.0)),
                ('max_discount', models.FloatField(default=9999999)),
                ('min_order_amount', models.FloatField(default=0.0)),
                ('amount_added', models.FloatField()),
                ('price', models.FloatField()),
                ('free_included_time', models.FloatField()),
                ('free_included_time_validity', models.IntegerField()),
                ('free_included_kwh', models.FloatField()),
                ('free_included_kwh_validity', models.IntegerField()),
                ('plan_renewal_interval', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.CharField(default='CHARGING', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('type', models.CharField(max_length=255)),
                ('criteria', models.CharField(max_length=255)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('value', models.FloatField()),
                ('value_type', models.CharField(max_length=50)),
                ('min_order_amount', models.FloatField()),
                ('max_order_amount', models.FloatField()),
                ('max_discount', models.FloatField()),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('radius', models.FloatField()),
                ('max_invocation_by_an_single_user', models.IntegerField()),
                ('eligibility', models.FloatField()),
                ('eligibility_criteria', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('readonly', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaxTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('tax_details', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=255)),
                ('registration_id', models.CharField(max_length=255)),
                ('device_type', models.CharField(choices=[('ANDROID', 'Android'), ('IOS', 'iOS')], max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('tax', models.FloatField()),
                ('gateway_id', models.CharField(blank=True, max_length=255, null=True)),
                ('gateway_name', models.CharField(blank=True, max_length=255, null=True)),
                ('order_serial', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(max_length=50)),
                ('limit_type', models.CharField(blank=True, max_length=50, null=True)),
                ('property', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(choices=[('phone', 'Phone'), ('email', 'Email')], max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('method', models.CharField(max_length=255)),
                ('captured', models.BooleanField(default=False)),
                ('refund', models.FloatField(default=0.0)),
                ('refund_to_wallet', models.FloatField(default=0.0)),
                ('refund_status', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('international', models.BooleanField(default=False)),
                ('fee', models.FloatField(default=0.0)),
                ('tax', models.FloatField(default=0.0)),
                ('tax_description', models.TextField(blank=True, null=True)),
                ('error_code', models.CharField(blank=True, max_length=50, null=True)),
                ('error_description', models.TextField(blank=True, null=True)),
                ('currency', models.CharField(max_length=3)),
                ('status', models.CharField(max_length=50)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_payment_info', to='users.order')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='payment_info',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_payment_info', to='users.paymentinfo'),
        ),
        migrations.CreateModel(
            name='PlanUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('expiry', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('validity', models.IntegerField()),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_users', to='users.plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_users', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SessionBilling',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('amount_added', models.FloatField()),
                ('amount_consumed', models.FloatField()),
                ('amount_refunded', models.FloatField()),
                ('time_added', models.FloatField()),
                ('time_consumed', models.FloatField()),
                ('time_refunded', models.FloatField()),
                ('kwh_added', models.FloatField()),
                ('kwh_consumed', models.FloatField()),
                ('kwh_refunded', models.FloatField()),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billings', to='ocpp_app.chargingsession')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='session_billing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='users.sessionbilling'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('pin', models.CharField(blank=True, max_length=10)),
                ('address', models.TextField(blank=True)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('start_balance', models.FloatField()),
                ('end_balance', models.FloatField()),
                ('reason', models.CharField(choices=[('EMPLOYEE_DEPOSIT', 'Employee Deposit'), ('REFUND', 'Refund'), ('EMPLOYEE_WITHDRAW', 'Employee Withdraw'), ('GIFT_DEPOSIT', 'Gift Deposit'), ('PROMOTIONAL_DEPOSIT', 'Promotional Deposit'), ('HOST_DEPOSIT', 'Host Deposit'), ('COMPLAIN_DEPOSIT', 'Complain Deposit'), ('CUSTOMER_DEPOSIT', 'Customer Deposit'), ('CHARGE_DEDUCTION', 'Charge Deduction')], max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='wallet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='users.wallet'),
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(max_length=255)),
                ('permission', models.CharField(max_length=255)),
                ('allowed', models.BooleanField(default=False)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='users.role')),
            ],
            options={
                'unique_together': {('role', 'module', 'permission')},
            },
        ),
    ]
